//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ProfileEntities : DbContext
    {
        public ProfileEntities()
            : base("name=ProfileEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Article> Articles { get; set; }
    
        public virtual ObjectResult<GetAllArticlesExceptTop5_Result> GetAllArticlesExceptTop5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllArticlesExceptTop5_Result>("GetAllArticlesExceptTop5");
        }
    
        public virtual ObjectResult<GetArticle_Result> GetArticle(string getArticleTitle)
        {
            var getArticleTitleParameter = getArticleTitle != null ?
                new ObjectParameter("GetArticleTitle", getArticleTitle) :
                new ObjectParameter("GetArticleTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetArticle_Result>("GetArticle", getArticleTitleParameter);
        }
    
        public virtual ObjectResult<GetTopArticles_Result> GetTopArticles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTopArticles_Result>("GetTopArticles");
        }
    
        public virtual ObjectResult<string> NavigateArticles(Nullable<int> getArticleId)
        {
            var getArticleIdParameter = getArticleId.HasValue ?
                new ObjectParameter("GetArticleId", getArticleId) :
                new ObjectParameter("GetArticleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("NavigateArticles", getArticleIdParameter);
        }
    }
}
